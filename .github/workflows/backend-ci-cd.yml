name: Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
      PORT: 5000
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      ACCESS_TOKEN_EXPIRE: ${{ secrets.ACCESS_TOKEN_EXPIRE }}
      REFRESH_TOKEN_EXPIRE: ${{ secrets.REFRESH_TOKEN_EXPIRE }}

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔧 Generate Prisma client
        run: npx prisma generate

      - name: 🗄️ Run Prisma migrations
        run: npx prisma migrate deploy

      - name: 🧪 Seed database
        run: npx prisma db seed || echo "No seed file found, skipping"

      - name: 🧪 Run tests with coverage
        run: npm test -- --coverage

      - name: ☁️ Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # ✅ Fix rate limit issue
          files: ./coverage/lcov.info
          flags: backend
          fail_ci_if_error: true
          verbose: true

  deploy:
    name: 🚀 Deploy to Render
    needs: test
    if: github.ref == 'refs/heads/main' # Deploy only from main branch
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
      RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Trigger Render Deployment
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_TOKEN }}" \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
