name: Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE_URL: mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
      PORT: 5000
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      ACCESS_TOKEN_EXPIRE: 15m
      REFRESH_TOKEN_EXPIRE: 7d

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üîß Generate Prisma client
        run: npx prisma generate

      - name: üóÑÔ∏è Run Prisma migrations
        run: npx prisma migrate deploy

      - name: üß™ Run tests with coverage
        run: npm test -- --coverage

      - name: ‚òÅÔ∏è Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: true

  deploy:
    name: Deploy to Render
    needs: test
    if: github.ref == 'refs/heads/main'  # Deploy only from main branch
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE_URL: mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}

    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v3

      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: üì¶ Install dependencies
        run: npm install

      - name: üèóÔ∏è Build project
        run: npm run build

      - name: üöÄ Deploy to Render
        run: curl -X POST https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}
