name: Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Generate Prisma client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}

      - name: Run migrations
        run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}

      - name: Run tests
        run: npm test -- --coverage
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}

      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: true

  deploy:
    needs: test
    if: github.ref == 'refs/heads/main' # Deploy only on main branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}

      - name: Deploy to Render
        run: curl -X POST https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}
        env:
          RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}