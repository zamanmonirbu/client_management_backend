name: Backend CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    env:
      DATABASE_URL: mysql://root:root@127.0.0.1:3306/test_db
      PORT: 5000
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      ACCESS_TOKEN_EXPIRE: 15m
      REFRESH_TOKEN_EXPIRE: 7d

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔧 Generate Prisma client
        run: npx prisma generate

      - name: 🗄️ Run Prisma migrations
        run: npx prisma migrate deploy

      - name: 🧪 Seed database
        run: npx prisma db seed || echo "No seed file found, skipping"

      - name: 🧪 Run tests with coverage
        run: npm test -- --coverage

      - name: ☁️ Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info
          fail_ci_if_error: true

  deploy:
    name: Deploy to Render
    needs: test
    if: github.ref == 'refs/heads/main'  # Deploy only from main branch
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DATABASE_URL: mysql://${{ secrets.DB_USER }}:${{ secrets.DB_PASSWORD }}@${{ secrets.DB_HOST }}:${{ secrets.DB_PORT }}/${{ secrets.DB_NAME }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      REFRESH_SECRET: ${{ secrets.REFRESH_SECRET }}
      RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v3

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: 📦 Install dependencies
        run: npm install

      - name: 🏗️ Build project
        run: npm run build

      - name: 🚀 Deploy to Render
        run: curl -X POST https://api.render.com/deploy/${{ secrets.RENDER_SERVICE_ID }}
